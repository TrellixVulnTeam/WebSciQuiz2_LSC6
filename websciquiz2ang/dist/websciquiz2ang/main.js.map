{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/covid.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;ICX/D,4EAAiE;IAC/D,uDACF;IAAA,4DAAS;;;IAFiC,6FAAsB;IAC9D,0DACF;IADE,8FACF;;;IAGF,yEAAuD;IACrD,wEAAkD;IAAA,uDAAsB;IAAA,0EAAoD;IAAA,qEAAU;IAAA,4DAAO;IAAA,4DAAK;IAClJ,wEAAqB;IAAA,uDAAoC;IAAA,4DAAK;IAC9D,wEAAqB;IAAA,uDAAoC;IAAA,4DAAK;IAC9D,wEAAqB;IAAA,wDAAwB;IAAA,4DAAK;IACpD,4DAAM;;;IAJ8C,0DAAsB;IAAtB,mGAAsB;IACnD,0DAAoC;IAApC,iHAAoC;IACpC,0DAAoC;IAApC,iHAAoC;IACpC,0DAAwB;IAAxB,qGAAwB;;;IAG7C,qEAAI;IAAA,+FAAoC;IAAA,4DAAK;;ACT1C,MAAM,YAAY;IAWvB,YAAoB,KAAkB;QAAlB,UAAK,GAAL,KAAK,CAAa;QAVtC,UAAK,GAAG,gBAAgB,CAAC;IAUe,CAAC;IAEzC,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;YAC1C,oBAAoB;YACpB,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;IACD,OAAO;QACL,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;YACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;YAC3B,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAC;gBACnB,KAAK,CAAC,6BAA6B,CAAC,CAAC;gBACrC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;iBAAI;gBACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS;gBACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS;gBACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM;gBAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI;aACpC;QACH,CAAC,CAAC;IACJ,CAAC;IACD,UAAU,CAAC,OAAc;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO;IACxB,CAAC;;wEAvCU,YAAY;4FAAZ,YAAY;QDPzB,sEAAK;QACH,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACtB,wEAAO;QAAA,kEAAO;QAAA,4DAAQ;QACtB,4EAAmD;QAA3C,4IAAU,mCAA+B,IAAC;QAChD,8GAES;QACX,4DAAS;QACT,4EAA6B;QAArB,oIAAS,aAAS,IAAC;QAAE,2FAAgC;QAAA,4DAAS;QACtE,yGAKM;QACN,sMAEc;QAChB,4DAAM;;;QAd0B,0DAAY;QAAZ,kFAAY;QAKpC,0DAAkB;QAAlB,8EAAkB;;;;;;;;;;;;;;AER1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACJ;AACE;AACT;;AAcxC,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YALJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;SACjB;mIAIU,SAAS,mBAVlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;;;;;;;;;;;;;;;;;;;ACPb,MAAM,YAAY;IAEvB,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAAI,CAAC;IAExC,YAAY;QACV,MAAM,GAAG,GAAG,sCAAsC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC;IAGhC,CAAC;IAED,YAAY,CAAC,OAAc;QACzB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,GAAG,GAAG,kDAAkD,GAAG,OAAO,CAAC;QACzE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC,CAAC;IAGjC,CAAC;;wEAjBU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;ACHpB;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACPuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div>\n  <h1>Covid Tracker</h1>\n  <label>Country</label>\n  <select (change)=\"getCountry($event.target.value)\">\n    <option *ngFor=\"let country of countries\" value={{country.Slug}}>\n      {{country.Country}}\n    </option>\n  </select>\n  <button (click)=\"getData()\" >Get Coronavirus Case Information</button>\n  <div *ngIf = \"databool; else nodata\" class=\"container\">\n    <h1 class=\"col-lg-12\" style=\"text-align: center;\">As of {{currentTime}} <span class=\"col-lg-12\" style=\"text-align: center;\">There are:</span></h1>\n    <h1 class=\"col-lg-6\">Total Confirmed Cases: {{confirmed}}</h1>\n    <h1 class=\"col-lg-6\">Total Recovered Cases: {{recovered}}</h1>\n    <h1 class=\"col-lg-6\">Total Deaths: {{deaths}}</h1>\n  </div>\n  <ng-template #nodata>\n    <h1>No Data to Display for this Country!</h1>\n  </ng-template>\n</div>","import { Component } from '@angular/core';\nimport {CovidService} from './services/covid.service'\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'websciquiz2ang';\n\n  countries:string\n  country:string\n  confirmed:Number\n  recovered:Number\n  deaths:Number\n  currentTime:Date\n  timeout:Number\n  databool:boolean\n  constructor(private covid:CovidService){}\n\n  ngOnInit(){\n    this.covid.getCountries().subscribe((data)=>{\n      //console.log(data);\n      var sortedData = data.sort((a, b) => (a.Country > b.Country) ? 1 : -1)\n      console.log(sortedData);\n      this.countries = sortedData;\n    })\n  }\n  getData(){\n    this.covid.getCovidData(this.country).subscribe((data)=>{\n      console.log(data);\n      var index = data.length - 1\n      if (data.length == 0){\n        alert(\"No Data on Inputted Country\");\n        this.databool = false;\n      }else{\n        this.databool = true;\n        this.confirmed = data[index].Confirmed\n        this.recovered = data[index].Recovered\n        this.deaths = data[index].Deaths\n        this.currentTime = data[index].Date\n      }\n    })\n  }\n  getCountry(country:string){\n    this.country = country\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule} from '@angular/common/http'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CovidService {\n\n  constructor(private http:HttpClient) { }\n\n  getCountries():Observable<any>{\n    const url = \"https://api.covid19api.com/countries\";\n    return this.http.get<any>(url)\n\n\n  }\n\n  getCovidData(country:string):Observable<any>{\n    console.log(country);\n    const url = \"https://api.covid19api.com/total/dayone/country/\" + country;\n    return this.http.get<any>(url);\n\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}